<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id=",-ec|2J!ZKO=VJ{`nRi0" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="8`GS.}8`=9~F3]w9XYFf" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace control {" line1="    export const enum PXT_PANIC {" line2="        VARIABLE_TYPE_NOT_VALID = 9328323" line3="    }" line4="}" numlines="5"></mutation><next><block type="typescript_statement" id="@}n5v97j@K0HwSNNwkQx" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Variable {" line1="    export let variables: any = {}" line2="    //% block=&quot;set $variable to $value&quot;" line3="    export function setVariable(variable: string, value: any = 0) {" line4="        variables[variable] = value" line5="    }" line6="    export function changeVariable(variable: string, byValue: any = 1) {" line7="        if (typeof byValue != &quot;string&quot; &amp;&amp; typeof byValue != &quot;number&quot;) control.panic(909) // &quot;type of \'byValue\' must be a string or a number&quot;)" line8="    }" line9="    //% block=&quot;$variable&quot;" line10="    export function getVariable(variable: string): any {" line11="        return variables[variable]" line12="    }" line13="}" numlines="14"></mutation><next><block type="typescript_statement" id="UnhYGNU===}D^XF`G-$2" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="Variable.changeVariable(&quot;lol&quot;, [&quot;heehee&quot;])" numlines="1"></mutation></block></next></block></next></block></statement></block></xml>